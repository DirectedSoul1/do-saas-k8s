```
apiVersion: v1
kind: Namespace
metadata: { name: prod }
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: web, namespace: prod }
spec:
  replicas: 3
  selector: { matchLabels: { app: web } }
  template:
    metadata: { labels: { app: web } }
    spec:
      containers:
      - name: web
        image: registry.digitalocean.com/saas-registry-1/saas-app:latest
        ports: [{containerPort: 3000}]
        resources:
          requests: { cpu: "200m", memory: "256Mi" }
          limits:   { cpu: "500m", memory: "512Mi" }
        readinessProbe:
          httpGet: { path: /healthz, port: 3000 }
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /healthz, port: 3000 }
          initialDelaySeconds: 10
      imagePullSecrets:
      - name: registry-saas-registry-1
---
apiVersion: v1
kind: Service
metadata: { name: web-svc, namespace: prod }
spec:
  selector: { app: web }
  ports: [{ name: http, port: 80, targetPort: 3000 }]
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ing
  namespace: prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-svc
            port: { number: 80 }
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: { name: web-hpa, namespace: prod }
spec:
  scaleTargetRef: { apiVersion: apps/v1, kind: Deployment, name: web }
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target: { type: Utilization, averageUtilization: 60 }
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata: { name: web-pdb, namespace: prod }
spec:
  minAvailable: 2
  selector: { matchLabels: { app: web } }
```
